# Generated by Django 4.2.9 on 2024-01-17 09:45

from decimal import Decimal

import django.db.models.deletion
import django.utils.timezone
import djmoney.models.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("accounts", "0016_administrativeentity_min_cfc2_price_and_more"),
        ("submissions", "0024_geom_field_input_type_for_form"),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="submission",
            options={
                "permissions": [
                    ("read_submission", "Consulter les demandes"),
                    ("amend_submission", "Traiter les demandes"),
                    ("edit_submission_validations", "Modifier les validations"),
                    ("validate_submission", "Valider les demandes"),
                    ("classify_submission", "Classer les demandes"),
                    ("edit_submission", "Modifier les demandes"),
                    ("view_private_form", "Voir les demandes restreintes"),
                    ("can_refund_transactions", "Rembourser une transaction"),
                    ("can_revert_refund_transactions", "Revenir sur un remboursement"),
                    ("can_manage_service_fee", "Gérer une prestation"),
                ],
                "verbose_name": "2.2 Consultation de la demande",
                "verbose_name_plural": "2.2 Consultation des demandes",
            },
        ),
        migrations.AddField(
            model_name="historicalsubmission",
            name="service_fees_total_price",
            field=models.IntegerField(
                help_text="Prix total des prestations",
                null=True,
                verbose_name="Prix total des prestations",
            ),
        ),
        migrations.AddField(
            model_name="submission",
            name="service_fees_total_price",
            field=models.IntegerField(
                help_text="Prix total des prestations",
                null=True,
                verbose_name="Prix total des prestations",
            ),
        ),
        migrations.CreateModel(
            name="SubmissionCFC2Price",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "cfc2_price_currency",
                    djmoney.models.fields.CurrencyField(
                        choices=[("CHF", "CHF .-"), ("EUR", "EUR €"), ("USD", "USD $")],
                        default="CHF",
                        editable=False,
                        max_length=3,
                    ),
                ),
                (
                    "cfc2_price",
                    djmoney.models.fields.MoneyField(
                        decimal_places=2,
                        default=Decimal("0.0"),
                        max_digits=12,
                        verbose_name="Montant CFC 2",
                    ),
                ),
                (
                    "submission",
                    models.OneToOneField(
                        help_text="Demande",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="submissioncfc2price",
                        to="submissions.submission",
                        verbose_name="Demande",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ServicesFeesType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Prestation")),
                (
                    "fix_price_currency",
                    djmoney.models.fields.CurrencyField(
                        choices=[("CHF", "CHF .-"), ("EUR", "EUR €"), ("USD", "USD $")],
                        default="settings.DEFAULT_CURRENCY",
                        editable=False,
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "fix_price",
                    djmoney.models.fields.MoneyField(
                        decimal_places=2,
                        default=None,
                        default_currency="settings.DEFAULT_CURRENCY",
                        help_text="Le tarif forfaitaire de cette prestation.",
                        max_digits=12,
                        null=True,
                        verbose_name="Tarif forfaitaire [CHF]",
                    ),
                ),
                (
                    "is_visible_by_validator",
                    models.BooleanField(
                        help_text="Est visible par le validateur",
                        verbose_name="Visible par le validateur",
                    ),
                ),
                (
                    "administrative_entity",
                    models.ForeignKey(
                        help_text="Entité administrative.",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="administrative_entity",
                        to="accounts.administrativeentity",
                        verbose_name="Entité administrative",
                    ),
                ),
                (
                    "integrator",
                    models.ForeignKey(
                        limit_choices_to={
                            "permit_department__is_integrator_admin": True
                        },
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="auth.group",
                        verbose_name="Groupe des administrateurs",
                    ),
                ),
            ],
            options={
                "verbose_name": "2.4 Type de prestation",
                "verbose_name_plural": "2.4 Types de prestation",
            },
        ),
        migrations.CreateModel(
            name="ServicesFees",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création."
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de dernière modification."
                    ),
                ),
                (
                    "provided_at",
                    models.DateField(
                        default=django.utils.timezone.now,
                        help_text="La prestation a été saisie à cette date.",
                        verbose_name="Saisie le",
                    ),
                ),
                (
                    "time_spent_on_task",
                    models.DurationField(
                        default=0,
                        help_text="Temps passé pour effectuer la prestation (en minutes).",
                        null=True,
                        verbose_name="Durée [m]",
                    ),
                ),
                (
                    "hourly_rate_currency",
                    djmoney.models.fields.CurrencyField(
                        choices=[("CHF", "CHF .-"), ("EUR", "EUR €"), ("USD", "USD $")],
                        default="CHF",
                        editable=False,
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "hourly_rate",
                    djmoney.models.fields.MoneyField(
                        decimal_places=2,
                        default=Decimal("0.0"),
                        help_text="Le tarif horaire de la prestation. Choisi par l'intégrateur.",
                        max_digits=12,
                        null=True,
                        verbose_name="Tarif horaire [CHF]",
                    ),
                ),
                (
                    "monetary_amount_currency",
                    djmoney.models.fields.CurrencyField(
                        choices=[("CHF", "CHF .-"), ("EUR", "EUR €"), ("USD", "USD $")],
                        default="CHF",
                        editable=False,
                        max_length=3,
                    ),
                ),
                (
                    "monetary_amount",
                    djmoney.models.fields.MoneyField(
                        decimal_places=2,
                        default=Decimal("0.0"),
                        help_text="Le montant de la prestation. Calulé automatiquement en fonction du tarif horaire. Est fixe si la prestation est forfaitaire. ",
                        max_digits=12,
                        verbose_name="Montant [CHF]",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="La prestation a été créé par cet utilisateur.",
                        max_length=255,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="service_fee_created_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Créée par",
                    ),
                ),
                (
                    "permit_department",
                    models.ForeignKey(
                        help_text="Département.",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="permit_department",
                        to="accounts.permitdepartment",
                        verbose_name="Département",
                    ),
                ),
                (
                    "provided_by",
                    models.ForeignKey(
                        help_text="La prestation a été effectuée au nom de cet utilisateur.",
                        max_length=255,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="service_fee_provided_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Saisie par",
                    ),
                ),
                (
                    "services_fees_type",
                    models.ForeignKey(
                        help_text="Choix de la prestation ; à effectuer dans une liste prédéfinie.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="services_fees_type",
                        to="submissions.servicesfeestype",
                        verbose_name="Type de prestation",
                    ),
                ),
                (
                    "submission",
                    models.ForeignKey(
                        help_text="Demande",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="submission",
                        to="submissions.submission",
                        verbose_name="Demande",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        help_text="La prestation a été mise à jour par cet utilisateur.",
                        max_length=255,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="service_fee_updated_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Mise à jour par",
                    ),
                ),
            ],
        ),
    ]
