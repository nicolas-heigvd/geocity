# Generated by Django 3.2.15 on 2022-11-17 09:51

import django.core.validators
import django.db.models.deletion
import django_ckeditor_5.fields
from django.db import migrations, models

import geocity.apps.reports.fields
import geocity.fields


class Migration(migrations.Migration):

    dependencies = [
        ("submissions", "0004_new_admin_models_and_metadata"),
        ("reports", "0013_rename_report_sections_variables"),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="report",
            options={
                "permissions": [("can_generate_pdf", "Générer des documents pdf")],
                "verbose_name": "3.2 Modèle d'impression",
                "verbose_name_plural": "3.2 Modèles d'impression",
            },
        ),
        migrations.AlterModelOptions(
            name="reportlayout",
            options={
                "verbose_name": "3.1 Format de papier",
                "verbose_name_plural": "3.1 Formats de papier",
            },
        ),
        migrations.AlterModelOptions(
            name="section",
            options={
                "ordering": ["order"],
                "verbose_name": "Paragraphe",
                "verbose_name_plural": "Paragraphes",
            },
        ),
        migrations.AlterField(
            model_name="report",
            name="document_types",
            field=models.ManyToManyField(
                blank=True,
                related_name="_reports_report_document_types_+",
                to="submissions.ComplementaryDocumentType",
                verbose_name="Types de documents",
            ),
        ),
        migrations.AlterField(
            model_name="report",
            name="layout",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.RESTRICT,
                to="reports.reportlayout",
                verbose_name="Format de papier",
            ),
        ),
        migrations.AlterField(
            model_name="report",
            name="name",
            field=models.CharField(max_length=150, verbose_name="Nom"),
        ),
        migrations.AlterField(
            model_name="reportlayout",
            name="background",
            field=geocity.apps.reports.fields.BackgroundFileField(
                blank=True,
                help_text="Image d'arrière plan (PNG).",
                null=True,
                storage=geocity.fields.PrivateFileSystemStorage(),
                upload_to="backgound_paper",
                validators=[
                    django.core.validators.FileExtensionValidator(
                        allowed_extensions=["png"]
                    )
                ],
                verbose_name="Papier à entête",
            ),
        ),
        migrations.AlterField(
            model_name="reportlayout",
            name="font",
            field=models.CharField(
                blank=True,
                help_text='La liste des polices disponbiles est visible sur <a href="https://fonts.google.com/" target="_blank">Goole Fonts</a>',
                max_length=1024,
                null=True,
                verbose_name="Police",
            ),
        ),
        migrations.AlterField(
            model_name="reportlayout",
            name="height",
            field=models.PositiveIntegerField(default=297, verbose_name="Hauteur"),
        ),
        migrations.AlterField(
            model_name="reportlayout",
            name="margin_bottom",
            field=models.PositiveIntegerField(default=10, verbose_name="Marge: bas"),
        ),
        migrations.AlterField(
            model_name="reportlayout",
            name="margin_left",
            field=models.PositiveIntegerField(default=10, verbose_name="Marge: gauche"),
        ),
        migrations.AlterField(
            model_name="reportlayout",
            name="margin_right",
            field=models.PositiveIntegerField(default=10, verbose_name="Marge: droite"),
        ),
        migrations.AlterField(
            model_name="reportlayout",
            name="margin_top",
            field=models.PositiveIntegerField(default=10, verbose_name="Marge: haut"),
        ),
        migrations.AlterField(
            model_name="reportlayout",
            name="name",
            field=models.CharField(max_length=150, verbose_name="Nom"),
        ),
        migrations.AlterField(
            model_name="reportlayout",
            name="width",
            field=models.PositiveIntegerField(default=210, verbose_name="Largeur"),
        ),
        migrations.AlterField(
            model_name="section",
            name="order",
            field=models.PositiveIntegerField(
                blank=True, null=True, verbose_name="Ordre du paragraphe"
            ),
        ),
        migrations.AlterField(
            model_name="sectionmap",
            name="qgis_print_template_name",
            field=models.CharField(
                blank=True,
                default="paysage-cadastre",
                help_text="Modèles du projet par défaut: paysage-cadastre, paysage-ortho",
                max_length=30,
                verbose_name="Nom du modèle QGIS",
            ),
        ),
        migrations.AlterField(
            model_name="sectionparagraph",
            name="content",
            field=django_ckeditor_5.fields.CKEditor5Field(
                help_text='Il est possible d\'inclure des variables et de la logique avec la <a href="https://jinja.palletsprojects.com/en/3.1.x/templates/">syntaxe Jinja</a>. Les variables de la demande sont accessible dans `{{request_data}}` et celles du formulaire dans `{{form_data}}`.',
                verbose_name="Contenu",
            ),
        ),
        migrations.AlterField(
            model_name="sectionparagraph",
            name="title",
            field=models.CharField(
                blank=True, default="", max_length=2000, verbose_name="Titre"
            ),
        ),
    ]
